

根据描述设计数据库，并录入一些数据，写出下列问题的SQL语句：
设计数据库描述：
存在四个数据对象：教师，课题，学生，成绩。 其中一个教师可教多门课，一个学生需要学习多门课，一个学生一门课只有一次成绩。根据以上描述合理设计你的数据表。
问题：


教师表
CREATE TABLE `teacher` (
  `t_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '教师id',
  `t_name` varchar(20) DEFAULT NULL COMMENT '教师姓名',
  PRIMARY KEY (`t_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

INSERT INTO teacher VALUES(1,'张三');
INSERT INTO teacher VALUES(2,'李思');
INSERT INTO teacher VALUES(3,'王五');
INSERT INTO teacher VALUES(4,'李四');


学生表
CREATE TABLE `student` (
  `s_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '学生学号',
  `s_name` varchar(20) DEFAULT NULL COMMENT '学生名字',
  `s_gender` varchar(20) DEFAULT NULL COMMENT '学生性别',
  PRIMARY KEY (`s_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

INSERT INTO student VALUES(1,'小明','男');
INSERT INTO student VALUES(2,'小马','女');
INSERT INTO student VALUES(3,'小米','女');
INSERT INTO student VALUES(4,'极客','男');
INSERT INTO student VALUES(5,'小李','女');

课题表
CREATE TABLE `course` (
  `c_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '课题号码',
  `c_name` varchar(20) DEFAULT NULL COMMENT '课题名称',
  `c_credit` float(5,0) DEFAULT NULL COMMENT '课题学分',
  PRIMARY KEY (`c_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

INSERT INTO course VALUES(1,'语文',2);
INSERT INTO course VALUES(2,'数学',2);
INSERT INTO course VALUES(3,'英语',1);
INSERT INTO course VALUES(4,'计算机程序设计',2);
INSERT INTO course VALUES(5,'历史',2);


成绩表
CREATE TABLE `score` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '成绩编号',
  `c_id` int(11) DEFAULT NULL COMMENT '课题编号',
  `s_id` int(11) DEFAULT NULL COMMENT '学生学号',
  `t_id` int(11) DEFAULT NULL COMMENT '教师工号',
  `score` float(5,0) DEFAULT NULL COMMENT '成绩',
  PRIMARY KEY (`id`),
  KEY `fk_s_id` (`s_id`),
  KEY `fk_t_id` (`t_id`),
  CONSTRAINT `fk_s_id` FOREIGN KEY (`s_id`) REFERENCES `student` (`s_id`),
  CONSTRAINT `fk_t_id` FOREIGN KEY (`t_id`) REFERENCES `teacher` (`t_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

INSERT INTO score VALUES(1,1,2,1,90);
INSERT INTO score VALUES(2,2,2,3,60);
INSERT INTO score VALUES(3,4,4,2,80);
INSERT INTO score VALUES(4,2,3,3,99);
INSERT INTO score VALUES(5,3,1,2,73);
INSERT INTO score VALUES(6,2,4,2,60);
INSERT INTO score VALUES(7,4,1,2,90);
INSERT INTO score VALUES(8,3,4,1,86);
INSERT INTO score VALUES(9,2,3,2,50);
INSERT INTO score VALUES(10,1,3,4,94);

1.给出所有选修数学的女生。

SELECT * FROM student WHERE s_id IN( SELECT score.s_id FROM score WHERE score.c_id=
(SELECT c_id FROM course WHERE c_name='数学')) AND s_gender='女';

2.按照课程，给出每一门课程的平均成绩。
SELECT c_name,AVG(score) FROM score,course GROUP BY c_name ;
SELECT c_name,AVG(score) FROM score s,course c WHERE s.c_id=c.c_id GROUP BY c.c_name ;


3.按照课程，给出每门课程成绩最高的学生姓名
SELECT student.s_name,score.score,test.c_name FROM student,score,course,(SELECT MAX(score.score) score,course.c_name c_name FROM score,course 
WHERE course.c_id=score.c_id GROUP BY course.c_name) test WHERE student.s_id=score.s_id AND course.c_id=score.c_id AND score.score=test.score ;


4.给出张三教师所教学生的课程成绩表。

SELECT stu.s_name,s.score,s.s_id,c.c_name FROM  score s ,student stu, course c WHERE 
s.s_id=stu.s_id AND s.c_id=c.c_id AND s.t_id=(SELECT t_id FROM teacher WHERE t_name='张三');

根据老师的指导，做出了修改：
实现了所有功能，请老师再看一下，是否还可以优化和存在的问题。
